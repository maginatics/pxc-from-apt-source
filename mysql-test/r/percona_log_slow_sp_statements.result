DROP PROCEDURE IF EXISTS test_outer;
DROP PROCEDURE IF EXISTS test_inner;
SET SESSION min_examined_row_limit=0;
SET SESSION long_query_time=0;
CREATE PROCEDURE test_inner()
BEGIN
SELECT 2;
END^
CREATE PROCEDURE test_outer()
BEGIN
SELECT 1;
CALL test_inner();
END^
PREPARE stmt FROM "CALL test_outer()";
SET GLOBAL log_slow_sp_statements=ON;
[log_start.inc] percona.slow_extended.sp1
CALL test_outer();
1
1
2
2
EXECUTE stmt;
1
1
2
2
[log_stop.inc] percona.slow_extended.sp1
[log_grep.inc] file: percona.slow_extended.sp1 pattern: SELECT 1;
[log_grep.inc] lines:   2
[log_grep.inc] file: percona.slow_extended.sp1 pattern: SELECT 2;
[log_grep.inc] lines:   2
[log_grep.inc] file: percona.slow_extended.sp1 pattern: CALL test_
[log_grep.inc] lines:   0
[log_grep.inc] file: percona.slow_extended.sp1 pattern: # Stored_routine: test.test_outer
[log_grep.inc] lines:   2
[log_grep.inc] file: percona.slow_extended.sp1 pattern: # Stored_routine: test.test_inner
[log_grep.inc] lines:   2
SET GLOBAL log_slow_sp_statements=OFF;
[log_start.inc] percona.slow_extended.sp2
CALL test_outer();
1
1
2
2
EXECUTE stmt;
1
1
2
2
[log_stop.inc] percona.slow_extended.sp2
[log_grep.inc] file: percona.slow_extended.sp2 pattern: SELECT 1;
[log_grep.inc] lines:   0
[log_grep.inc] file: percona.slow_extended.sp2 pattern: SELECT 2;
[log_grep.inc] lines:   0
[log_grep.inc] file: percona.slow_extended.sp2 pattern: CALL test_
[log_grep.inc] lines:   2
[log_grep.inc] file: percona.slow_extended.sp2 pattern: # Stored_routine: test.test_
[log_grep.inc] lines:   0
DROP PROCEDURE test_outer;
DROP PROCEDURE test_inner;
SET GLOBAL log_slow_sp_statements=default;
SET SESSION long_query_time=default;
SET SESSION min_examined_row_limit=default;
